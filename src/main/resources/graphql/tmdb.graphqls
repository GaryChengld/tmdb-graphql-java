schema {
    query: Query
}

scalar Date

type Query {
    movieDetail(id: Int!): MovieDetail
    movieCredits(id: Int!): Credits
    movieImages(id: Int!): Images
    nowPlayingMovies(page: Int! = 1, region: String): MoviePageResults
    popularMovies(page: Int! = 1, region: String): MoviePageResults
    topRatedMovies(page: Int! = 1, region: String): MoviePageResults
    upcomingMovies(page: Int! = 1, region: String): MoviePageResults
}

type BaseMovie {
    id: Int!
    adult: Boolean!
    title: String!
    overview: String
    popularity: Float
    originalTitle: String
    originalLanguage: String
    backdropPath(size: ImageSize = ORIGINAL): String
    posterPath(size: ImageSize = ORIGINAL): String
    genres: [Genre]
    voteAverage: Float
    voteCount: Int
    releaseDate: Date
    images: Images
    videos(type: String): [Video]
}

type MovieDetail {
    id: Int!
    adult: Boolean!
    title: String!
    overview: String
    popularity: Float
    originalTitle: String
    originalLanguage: Language
    backdropPath(size: ImageSize = ORIGINAL): String
    posterPath(size: ImageSize = ORIGINAL): String
    genres: [Genre]
    voteAverage: Float
    voteCount: Int
    releaseDate: Date
    imdbId: String
    status: String
    runtime: Int    
    tagLine: String
    budget: Int
    revenue: Int
    productionCountries: [Country]
    productionCompanies: [BaseCompany]
    spokenLanguages: [Language]
    casts(top: Int): [CastMember]
    crews(job: String): [CrewMember]
    credits: Credits
    images: Images
    videos(type: String): [Video]
}

type MoviePageResults {
    page: Int!
    totalPages: Int!
    totalResults: Int!
    results: [BaseMovie]
}

type BaseCompany {
    id: Int!
    name: String!    
    originCountry: String
    logoPath(size: ImageSize = ORIGINAL): String
}

type Credits {
    casts: [CastMember]
    crews: [CrewMember]
}

type CastMember {
    id: Int!
    creditId: String!
    castId: Int!
    name: String!
    profilePath(size: ImageSize = ORIGINAL): String
    character: String
    order: Int
}

type CrewMember {
    id: Int!
    creditId: String!
    name: String!
    profilePath(size: ImageSize = ORIGINAL): String
    department: String
    job: String
}

type Images {
     backdrops(size: ImageSize = ORIGINAL): [String]
     posters(size: ImageSize = ORIGINAL): [String]
}

type Video {
    id: String!
    language: String
    country: String
    key: String
    name: String
    site: String
    size: Int!
    type: String
}

type Genre {
    id: Int!
    name: String!
}

type Language {
    code: String!
    englishName: String!
    name: String
}

type Country {
    code: String!
    name: String!
}

enum ImageSize {
    S
    M
    L
    ORIGINAL
}